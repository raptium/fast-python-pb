#include <Python.h>
#include <google/protobuf/stubs/common.h>
{% for proto in package.children %}
#include "{{ proto.name|proto_name }}.h"
{% endfor %}

using namespace fast_pb_wrapped;

static PyMethodDef module_methods[] = {
    {NULL}  // Sentinel
};

#ifndef PyMODINIT_FUNC  // Declarations for DLL import/export.
#define PyMODINIT_FUNC void
#endif
PyMODINIT_FUNC
init{{ package.name.split('.')[-1] }}(void)
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    PyObject* m;
    PyObject *classDict;

    m = Py_InitModule3("{{ package.name }}", module_methods,
                       "{{ moduleDescription }}");

    if (m == NULL)
      return;

    {% for proto in package.children %}
        {% for message in proto.message_type %}
    if (PyType_Ready(&{{ message.name }}Type) < 0)
        return;
        {% endfor %}

        {% for enum in proto.enum_type %}
    classDict = PyDict_New();
            {% for value in enum.value %}
    PyDict_SetItemString(classDict, "{{ value.name }}", PyInt_FromLong({{ value.number }}));
            {% endfor %}
    enum_{{ enum.name }}Type.tp_dict = classDict;
    enum_{{ enum.name }}Type.tp_new = PyType_GenericNew;

    if (PyType_Ready(&enum_{{ enum.name }}Type) < 0)
        return;

    Py_INCREF(&enum_{{ enum.name }}Type);
    PyModule_AddObject(m, "{{ enum.name }}", (PyObject *)&enum_{{ enum.name }}Type);
        {% endfor %}

        {% for message in proto.message_type %}
    Py_INCREF(&{{ message.name }}Type);
    PyModule_AddObject(m, "{{ message.name }}", (PyObject *)&{{ message.name }}Type);
        {% endfor %}
    {% endfor %}
}